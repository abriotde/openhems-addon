name: Docker Image CI CI for ghcr.io

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest  
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        platform: [
          {target_arch: amd64, os_version: debian},
          {target_arch: armv7, os_version: debian},
          {target_arch: armhf, os_version: raspbian},
          {target_arch: aarch64, os_version: debian}
        ]
    steps:
    # Pull git repo and build each architecture image separately (with QEMU and Buildx)
      - name: lowercase repo
        run: |
          echo "IMAGE_NAME_LOWER=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
          echo "IMAGE_VERSION=$(grep 'version' openhems/config.yaml|awk '{print $2}'|sed 's/\"//g')" >> ${GITHUB_ENV}
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}
          tags: |
            type=raw, value=latest
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./openhems/
          push: true
          tags: |
            ghcr.io/abriotde/openhems-addon:latest
#            ghcr.io/abriotde/openhems-addon:${{ env.IMAGE_VERSION }}
      # Export the build images as artifact for the next job of merging
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.platform.target_arch }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
 # Merge platforms into images into a multi-platform image 
  merge:
    if: always()
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    needs:
      - build
    steps:
      - name: lowercase repo  
        run: |
          echo "IMAGE_NAME_LOWER=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
          echo "IMAGE_VERSION=$(grep 'version' openhems/config.yaml|awk '{print $2}'|sed 's/\"//g')" >> ${GITHUB_ENV}
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true   
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3     
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}:${{ env.IMAGE_VERSION}}
